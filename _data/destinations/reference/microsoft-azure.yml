# -------------------------- #
#       Azure Reference      #
# -------------------------- #

# This file contains the data used in this destination's overview/reference
# guide. Includes supported connection types, data type limits, object
# naming rules, etc.


# -------------------------- #
#         DEFAULTS           #
# -------------------------- #

# The sections below contain key:value pairs for each category.
# This is done so that individual values can be called instead of having
# to loop through the entire list of items to get a single thing.

# -------------------------- #
#       Stitch Details       #
# -------------------------- #

# Details about Stitch's implementation &
# requirements for the destination.

stitch-details-info:
  pricing-tier: &pricing-tier |
    All Stitch plans
  supported-versions: &supported-versions |
    n/a

# Connection methods

  connection-methods:
    ssl: &connection-methods-ssl |
      true
    ssh: &connection-methods-ssh |
      true
    vpn: &connection-methods-vpn |
      false

# -------------------------- #
#         Replication        #
# -------------------------- #

replication-info:
  incremental-replication:
    upserts: &incremental-rep-upserts |
      true
    append: &incremental-rep-append |
      true

  primary-keys:
    supported: &primary-key-support |
      false

  multiple-data-types:
    supported: &multiple-data-type-support |
      false

  nested-structures:
    supported: &nested-structure-support |
      false

  incompatible-sources: &incompatible-sources |
    TODO

# -------------------------- #
#         Limitations        #
# -------------------------- #

# -------------------------- #
#      Object name limits    #
# -------------------------- #

object-name-limit-info:
  case-sensitivity: &case-sensitivity "Insensitive"
  tables: &table-name-length "128 characters"
  columns: &column-name-length "128 characters"

# -------------------------- #
#         Table limits       #
# -------------------------- #

table-limit-info:
  max-columns-per-table: &max-columns-per-table "1,024 columns"
  max-table-size: &max-table-size "60 TB compressed on disk"
  max-per-database: &max-per-database "10,000 tables"

# -------------------------- #
#      Data type limits      #
# -------------------------- #

data-limit-info:
  max-record-size: &max-record-size "1 MB"

  boolean:
    values: &boolean "1, 0, NULL"

  date-and-time:
    timezone-support: &timezone-support |
      false

    date-range: &date-range "January 1, 1753 AD, through December 31, 9999 AD"
    timestamp-range: &timestamp-range "00:00:00 through 23:59:59.997"

  decimal:
    precision: &decimal-precision "Must be between 1 and 38 (38 is the default)"
    scale: &decimal-scale "Must be between 0 and the precision value"

  strings:
    max-width: &strings-max-width "4,000 bytes"

# -------------------------- #
#     Object naming rules    #
# -------------------------- #

# Naming scenarios for columns

column-naming-info:
  with-mixed-case: &destination-column-name |
    {{ column-name | downcase | remove: "_!" | remove: "# " }}

  with-spaces: *destination-column-name
  with-unsupported-characters: *destination-column-name
  with-underscore-start: *destination-column-name
  with-non-letter-start: *destination-column-name



# -------------------------- #
#       LIST OF VALUES       #
# -------------------------- #

# This is all the values from the sections up there ^ in list form.
# This allows forloops to be used to display the data all at once instead of 
# Calling each thing individually.

# Note that anything preceeded by an asterisk is a reference. This means that
# to change its value, you need to find the corresponding anchor (preceeded by an
# ampersand) in the section up there ^.

# For example: To change the value of *pricing-tier, you'd look for &pricing-tier
# and then change whatever you need to change.

attributes:
  - id: "pricing-tier"
    categories: "stitch-details"
    value: *pricing-tier

  - id: "supported-versions"
    categories: "stitch-details"
    value: *supported-versions

  - id: "ssl-connections"
    categories: "stitch-details"
    value: *connection-methods-ssl
    description: |
      [TODO] - Determine if we use SSL by default, like we do for Redshift

  - id: "ssh-connections"
    categories: "stitch-details"
    value: *connection-methods-ssh
    description: |
      [TODO] - Add link to instructions once we know how to set this up

  - id: "vpn-connections"
    categories: "stitch-details"
    value: *connection-methods-vpn

  - id: "incremental-replication-upserts"
    categories: "replication"
    value: *incremental-rep-upserts
    description: |
      To update existing rows, Stitch will [TBD]

  # - id: "incremental-replication-append"
  #   value: *incremental-rep-append
  #   description: |

  - id: "primary-keys"
    categories: "replication"
    value: *primary-key-support
    description: |
      {{ destination.display_name }} destinations do not have native support for Primary Keys.

      To ensure existing rows can be updated, Stitch will create an `sdc_primary_keys` table in every integration schema. This table contains the Primary Key data for every table in the given schema, which Stitch will use to de-dupe rows during loading.

      Refer to our [Azure Primary Key handling documentation]({{ link.destinations.storage.azure-primary-keys | prepend: site.baseurl }}) for more info.

  - id: "multiple-data-types"
    categories: "replication"
    value: *multiple-data-type-support
    description: |
      {{ destination.display_name }} destinations do not support multiple data types in a single column.

      To accommodate this scenario, Stitch will [TODO].

  - id: "nested-data-structures"
    categories: "replication"
    value: *nested-structure-support
    description: |
      {{ destination.display_name }} destinations do not have native support for nested data structures.

      To ensure nested data can be loaded, Stitch will flatten objects and arrays into columns and subtables, respectively. For more info and examples, refer to the [Handling nested data structures guide]({{ link.destinations.storage.nested-structures | prepend: site.baseurl }}).

  - id: "incompatible-sources"
    categories: "replication"
    value: *incompatible-sources
    description: |
      TODO

  - id: "case-sensitivity"
    categories: "object-name-limits"
    value: *case-sensitivity
    description: |
      [TODO] - Determine if there's a pre-defined setting for this, and if not, if Stitch requires a certain configuration.

      As a source, we require MSSQL databases to have certain collation settings - is that applicable here?

  - id: "table-name-length"
    categories: "object-name-limits"
    value: *table-name-length
    description: |
      Tables with names that exceed this limit will be rejected. Rejected tables are logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).
      
  - id: "column-name-length"
    categories: "object-name-limits"
    value: *column-name-length
    description: |
      Columns with names that exceed this limit will be rejected. Rejected columns are logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "max-columns-per-table"
    categories: "table-limits"
    value: *max-columns-per-table

  - id: "max-table-size"
    categories: "table-limits"
    value: *max-table-size

  - id: "max-tables-per-database"
    categories: "table-limits"
    value: *max-per-database

  - id: "max-record-size"
    categories: "data-limits"
    important: true
    value: *max-record-size
    description: |
      This limit is imposed by [Polybase](https://docs.microsoft.com/en-us/azure/sql-data-warehouse/sql-data-warehouse-service-capacity-limits#loads){:target="new"}, which is required to load data into {{ destination.display_name }} destinations.

      [TODO] - figure out if we'll log a record rejection for this scenario.

  - id: "boolean-values"
    categories: "data-limits"
    important: true
    value: *boolean
    description: |
      [TODO] - Determine how sources that use `true/false` as boolean types will be loaded.

  - id: "date-and-time-timezone-support"
    categories: "data-limits"
    value: *timezone-support
    description: |
      [TODO] - Still need to determine how data with timezone info will be loaded.

  - id: "date-and-time-date-range"
    categories: "data-limits"
    value: *date-range
    description: |
      Date values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

      More info about {{ destination.display_name }} date data types can be found in [Microsoft's documentation](https://docs.microsoft.com/en-us/sql/t-sql/functions/date-and-time-data-types-and-functions-transact-sql?view=sql-server-2017){:target="new"}.

  - id: "date-and-time-timestamp-range"
    categories: "data-limits"
    value: *timestamp-range
    description: |
      Timestamp values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

      More info about {{ destination.display_name }} time data types can be found in [Microsoft's documentation](https://docs.microsoft.com/en-us/sql/t-sql/functions/date-and-time-data-types-and-functions-transact-sql?view=sql-server-2017){:target="new"}.

  - id: "decimal-precision"
    categories: "data-limits"
    value: *decimal-precision
    description: |
      Decimal values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "decimal-scale"
    categories: "data-limits"
    value: *decimal-scale
    description: |
      Decimal values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "strings-max-width"
    categories: "data-limits"
    value: *strings-max-width
    important: true
    description: |
      String values outside of this range will be rejected and logged in the [`sdc_rejected` table]({{ link.destinations.storage.rejected-records | prepend: site.baseurl }}).

  - id: "mixed-case"
    categories: "column-naming"
    example: |
      {{ column-name | remove: "_!" | remove: "# " }}
    value: *destination-column-name
    description: 

  - id: "with-spaces"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "_!" | remove: "#" }}
    value: *destination-column-name

  - id: "with-unsupported-characters"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "_" }}
    value: *destination-column-name

  - id: "with-underscore-start"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | remove: "!" | remove: "# " }}
    value: *destination-column-name

  - id: "with-non-letter-start"
    categories: "column-naming"
    example: |
      {{ column-name | downcase | replace: "_!","123" | remove: "# " }}
    value: *destination-column-name